<?xml version="1.0" encoding="UTF-8"?>
<XMI xmlns:UML="http://schema.omg.org/spec/UML/1.4" verified="false" xmi.version="1.2" timestamp="2019-02-03T15:57:47">
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller http://umbrello.kde.org</XMI.exporter>
   <XMI.exporterVersion>1.6.13</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.metamodel href="UML.xml" xmi.name="UML" xmi.version="1.4"/>
 </XMI.header>
 <XMI.content>
  <UML:Model isLeaf="false" xmi.id="m1" isRoot="false" isSpecification="false" name="UML Model" isAbstract="false">
   <UML:Namespace.ownedElement>
    <UML:Stereotype visibility="public" isLeaf="false" xmi.id="folder" isRoot="false" isSpecification="false" isAbstract="false" name="folder" namespace="m1"/>
    <UML:Model visibility="public" isLeaf="false" xmi.id="Logical_View" isRoot="false" isSpecification="false" isAbstract="false" name="Logical View" namespace="m1">
     <UML:Namespace.ownedElement>
      <UML:Package visibility="public" isLeaf="false" xmi.id="Datatypes" isRoot="false" stereotype="folder" isSpecification="false" isAbstract="false" name="Datatypes" namespace="Logical_View">
       <UML:Namespace.ownedElement>
        <UML:DataType visibility="public" isLeaf="false" xmi.id="ubcLnvpDbYNRP" isRoot="false" isSpecification="false" isAbstract="false" name="char" namespace="Datatypes"/>
        <UML:DataType visibility="public" isLeaf="false" xmi.id="uhy262vCe82L5" isRoot="false" isSpecification="false" isAbstract="false" name="int" namespace="Datatypes"/>
        <UML:DataType visibility="public" isLeaf="false" xmi.id="uGtOL5I0SxyAq" isRoot="false" isSpecification="false" isAbstract="false" name="float" namespace="Datatypes"/>
        <UML:DataType visibility="public" isLeaf="false" xmi.id="uVukoCX0WjzdA" isRoot="false" isSpecification="false" isAbstract="false" name="double" namespace="Datatypes"/>
        <UML:DataType visibility="public" isLeaf="false" xmi.id="u1PnZADBU6x2o" isRoot="false" isSpecification="false" isAbstract="false" name="bool" namespace="Datatypes"/>
        <UML:DataType visibility="public" isLeaf="false" xmi.id="uu8feqNZ3ULgj" isRoot="false" isSpecification="false" isAbstract="false" name="string" namespace="Datatypes"/>
        <UML:DataType visibility="public" isLeaf="false" xmi.id="uIreAVdV9AhE7" isRoot="false" isSpecification="false" isAbstract="false" name="unsigned char" namespace="Datatypes"/>
        <UML:DataType visibility="public" isLeaf="false" xmi.id="utV7Xrb9dwM0V" isRoot="false" isSpecification="false" isAbstract="false" name="signed char" namespace="Datatypes"/>
        <UML:DataType visibility="public" isLeaf="false" xmi.id="ucqmlE0dqgjDP" isRoot="false" isSpecification="false" isAbstract="false" name="unsigned int" namespace="Datatypes"/>
        <UML:DataType visibility="public" isLeaf="false" xmi.id="u8WcIRnWlUICU" isRoot="false" isSpecification="false" isAbstract="false" name="signed int" namespace="Datatypes"/>
        <UML:DataType visibility="public" isLeaf="false" xmi.id="uJslN0qC2Vt0E" isRoot="false" isSpecification="false" isAbstract="false" name="short int" namespace="Datatypes"/>
        <UML:DataType visibility="public" isLeaf="false" xmi.id="u7RyClw3dWoMd" isRoot="false" isSpecification="false" isAbstract="false" name="unsigned short int" namespace="Datatypes"/>
        <UML:DataType visibility="public" isLeaf="false" xmi.id="uX3ZOalya5sVi" isRoot="false" isSpecification="false" isAbstract="false" name="signed short int" namespace="Datatypes"/>
        <UML:DataType visibility="public" isLeaf="false" xmi.id="uEvvUOKvBydTH" isRoot="false" isSpecification="false" isAbstract="false" name="long int" namespace="Datatypes"/>
        <UML:DataType visibility="public" isLeaf="false" xmi.id="uUK0bf6aNRwx1" isRoot="false" isSpecification="false" isAbstract="false" name="signed long int" namespace="Datatypes"/>
        <UML:DataType visibility="public" isLeaf="false" xmi.id="upcVC0dYexZJP" isRoot="false" isSpecification="false" isAbstract="false" name="unsigned long int" namespace="Datatypes"/>
        <UML:DataType visibility="public" isLeaf="false" xmi.id="udmpHjWPeohRg" isRoot="false" isSpecification="false" isAbstract="false" name="long double" namespace="Datatypes"/>
        <UML:DataType visibility="public" isLeaf="false" xmi.id="uCUMBHuaeLDIU" isRoot="false" isSpecification="false" isAbstract="false" name="wchar_t" namespace="Datatypes"/>
       </UML:Namespace.ownedElement>
      </UML:Package>
      <UML:Class comment="Class that get the amazon page and look for informations.&#xa;This is an object for each id.&#xa;Properties are amazon informations: name, price&#xa;Each object can write itself by appending to a json file&#xa;Each object has a date property" visibility="public" isLeaf="false" xmi.id="uthGJI9ZNSyRi" isRoot="false" isSpecification="false" isAbstract="false" name="Scraper" namespace="Logical_View">
       <UML:Classifier.feature>
        <UML:Attribute comment="date: to be initialized at construction. If passed else get from system" visibility="private" xmi.id="usCiH0A99s7fh" type="uu8feqNZ3ULgj" isSpecification="false" name="date"/>
        <UML:Attribute comment="amazon item price. To be read from scraping procedure" visibility="private" xmi.id="u91Ag8p0ee64P" type="uVukoCX0WjzdA" isSpecification="false" name="price"/>
        <UML:Attribute comment="amazon item name to be read from scraping procedure" visibility="private" xmi.id="uz9iuc8kuDhbU" type="uu8feqNZ3ULgj" isSpecification="false" name="name"/>
        <UML:Attribute comment="amazonId value. Passed at construction" visibility="private" xmi.id="uA4jfshhYnoXe" type="uu8feqNZ3ULgj" isSpecification="false" name="amazonId"/>
        <UML:Attribute comment="if true means that item has been scraped from amazon. init to false" initialValue="false" visibility="private" xmi.id="u5znzJKt2RjTG" type="u1PnZADBU6x2o" isSpecification="false" name="scrapDone"/>
        <UML:Operation comment="scrap the amazon page and initialize from id name and price" isQuery="false" visibility="public" isLeaf="false" isOverride="false" xmi.id="usv8yO1b6hb0y" isRoot="false" isSpecification="false" isAbstract="false" name="scrapPage"/>
        <UML:Operation comment="write results to json file. Operation is possible only if scraping called (use boolean)" isQuery="false" visibility="public" isLeaf="false" isOverride="false" xmi.id="uUZ8PeuupL9Qv" isRoot="false" isSpecification="false" isAbstract="false" name="writeResults"/>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class comment="Object that manage amazon scraping process&#xa;- attributes: &#xa;scrapedDict -> array of dictionary with name, price, id, date&#xa;- methods:&#xa;scrapID get an amazon id, scrap amazon page and create dictionary with results&#xa;addResult add result of scrapID to array of results. If date already exists, overwrite it&#xa;" visibility="public" isLeaf="false" xmi.id="uIaqIuLewZfkq" isRoot="false" isSpecification="false" isAbstract="false" name="amazonScraper" namespace="Logical_View">
       <UML:Classifier.feature>
        <UML:Attribute comment="it is an array of dictionary&#xa;{id: id, name: name, date: date, price: price}" visibility="private" xmi.id="u3eRZcSwdI8vX" type="u4HfZl5rBPWZN" isSpecification="false" name="scrapedResultsArray"/>
        <UML:Attribute comment="contains results from scraping process&#xa;{id: , name:, date:, price:}" visibility="private" xmi.id="uA4tsgBTi0VKT" type="u60Z4Ak037VFn" isSpecification="false" name="idDict"/>
        <UML:Operation comment="manage scraping procedure for id to get amazon results. Result is inserted in the idDict private variable" isQuery="false" visibility="public" isLeaf="false" isOverride="false" xmi.id="ukZ2sOVjTRbpn" isRoot="false" isSpecification="false" isAbstract="false" name="scrapPage">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter value="" comment="id is the amazon item id" visibility="private" xmi.id="udUrqwgHZB3bn" type="uu8feqNZ3ULgj" isSpecification="false" name="id"/>
          <UML:Parameter value="" kind="out" comment="create idDict" visibility="private" xmi.id="uAB3v66Z3FHNz" type="u60Z4Ak037VFn" isSpecification="false" name="idDict"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isLeaf="false" xmi.id="u4HfZl5rBPWZN" isRoot="false" isSpecification="false" isAbstract="false" name="array of dict" namespace="Logical_View"/>
      <UML:Class visibility="public" isLeaf="false" xmi.id="u60Z4Ak037VFn" isRoot="false" isSpecification="false" isAbstract="false" name="dictionary" namespace="Logical_View"/>
      <UML:Class visibility="public" isLeaf="false" xmi.id="uqsQ7tq1xsdrJ" isRoot="false" isSpecification="false" isAbstract="false" name="new_class" namespace="Logical_View"/>
      <UML:Class comment="object that manages the amazon ids" visibility="public" isLeaf="false" xmi.id="uXMrWdn1mrddQ" isRoot="false" isSpecification="false" isAbstract="false" name="manageIds" namespace="Logical_View">
       <UML:Classifier.feature>
        <UML:Attribute comment="array of ids" visibility="private" xmi.id="urbJhSuD7rXoW" type="uExkTT5hdo6SO" isSpecification="false" name="idsArray"/>
        <UML:Attribute comment="it is possible to manage more lists of ids" visibility="private" xmi.id="u9mnDsEmlmmty" type="uu8feqNZ3ULgj" isSpecification="false" name="listName"/>
        <UML:Operation comment="readids from a file" isQuery="false" visibility="public" isLeaf="false" isOverride="false" xmi.id="ufDY7xAeHTJGv" isRoot="false" isSpecification="false" isAbstract="false" name="readIdsFromFile">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter value="" comment="file of ids" visibility="private" xmi.id="uUmHL0NLSMLYb" type="uu8feqNZ3ULgj" isSpecification="false" name="fileIds"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="write to file the array of ids and the list name. File format could be json {list: listname; idArray:[]}&#xa;or csv list,id" isQuery="false" visibility="public" isLeaf="false" isOverride="false" xmi.id="uJmZBE6qSNxry" isRoot="false" isSpecification="false" isAbstract="false" name="writeToFile">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter value="" comment="filename to write to" visibility="private" xmi.id="usGPVLMh5iCGP" type="uu8feqNZ3ULgj" isSpecification="false" name="fileIds"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isLeaf="false" xmi.id="uExkTT5hdo6SO" isRoot="false" isSpecification="false" isAbstract="false" name="string array" namespace="Logical_View"/>
      <UML:Association visibility="public" xmi.id="uV37IBy1RvACD" isSpecification="false" name="" namespace="Logical_View">
       <UML:Association.connection>
        <UML:AssociationEnd aggregation="none" visibility="public" xmi.id="uCzwougRpzbdW" isNavigable="false" type="uXMrWdn1mrddQ" isSpecification="false" changeability="changeable" name=""/>
        <UML:AssociationEnd aggregation="none" visibility="public" xmi.id="uBsv0TQ25ZnUF" isNavigable="true" type="uIaqIuLewZfkq" isSpecification="false" changeability="changeable" name=""/>
       </UML:Association.connection>
      </UML:Association>
     </UML:Namespace.ownedElement>
     <XMI.extension xmi.extender="umbrello">
      <diagrams resolution="96">
       <diagram isopen="1" showatts="1" griddotcolor="#d3d3d3" showgrid="0" documentation="" snapy="25" font="Noto Sans,9,-1,5,50,0,0,0,0,0" showops="1" name="class diagram" textcolor="#000000" showpackage="1" localid="-1" snapgrid="0" usefillcolor="1" showpubliconly="0" backgroundcolor="#ffffff" fillcolor="#ffff00" showstereotype="1" xmi.id="usDo1ViJXfiWt" snapcsgrid="0" type="1" canvasheight="482" snapx="25" zoom="100" canvaswidth="1071" linecolor="#ff0000" showattsig="1" showopsig="1" linewidth="0" showattribassocs="1" showscope="1">
        <widgets>
         <notewidget noteType="0" height="143" y="-1197" autoresize="0" usesdiagramusefillcolor="0" width="271" usesdiagramfillcolor="0" text="Program Amazon Scraper:&#xa;- get a list of amazon items id&#xa;- for each item get the amazon page&#xa;- scrap the amazon page to get item description and price&#xa;- save each amazon interrogation by storing date&#xa;- calculate the items in the list total price  and print the lowest interrogation by date&#xa;- print the lowest total price with the date and the current one" font="Noto Sans,9,-1,5,50,0,0,0,0,0" textcolor="#000000" localid="ukJCRxOya4AQd" usefillcolor="1" fillcolor="#ffff00" showstereotype="1" isinstance="0" xmi.id="uLpwI7XYo43Zm" x="-1632" linecolor="#ff0000" linewidth="0"/>
         <classwidget height="86" y="-1029" autoresize="0" showattributes="1" usesdiagramusefillcolor="0" width="377" usesdiagramfillcolor="0" font="Noto Sans,9,-1,5,50,0,0,0,0,0" showoperations="1" textcolor="#000000" showopsigs="601" localid="uymemfTqvqCiO" showpackage="1" usefillcolor="1" showpubliconly="0" fillcolor="#ffff00" showstereotype="1" showattsigs="601" isinstance="0" xmi.id="uIaqIuLewZfkq" x="-1137" linecolor="#ff0000" linewidth="0" showscope="1"/>
         <classwidget height="80" y="-998" autoresize="1" showattributes="1" usesdiagramusefillcolor="0" width="196" usesdiagramfillcolor="0" font="Noto Sans,9,-1,5,50,0,0,0,0,0" showoperations="1" textcolor="#000000" showopsigs="601" localid="u9VN3UNun3XML" showpackage="1" usefillcolor="1" showpubliconly="0" fillcolor="#ffff00" showstereotype="1" showattsigs="601" isinstance="0" xmi.id="uXMrWdn1mrddQ" x="-1448" linecolor="#ff0000" linewidth="0" showscope="1"/>
        </widgets>
        <messages/>
        <associations>
         <assocwidget autoresize="1" usesdiagramusefillcolor="1" widgetaid="uXMrWdn1mrddQ" widgetbid="uIaqIuLewZfkq" usesdiagramfillcolor="1" indexa="1" indexb="1" totalcountb="2" font="Noto Sans,9,-1,5,50,0,0,0,0,0" textcolor="none" usefillcolor="1" fillcolor="none" xmi.id="uV37IBy1RvACD" type="512" totalcounta="2" seqnum="" linecolor="#ff0000" linewidth="0">
          <linepath layout="Polyline">
           <startpoint startx="-1252" starty="-986"/>
           <endpoint endx="-1137" endy="-986"/>
          </linepath>
         </assocwidget>
        </associations>
       </diagram>
      </diagrams>
     </XMI.extension>
    </UML:Model>
    <UML:Model visibility="public" isLeaf="false" xmi.id="Use_Case_View" isRoot="false" isSpecification="false" isAbstract="false" name="Use Case View" namespace="m1">
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model visibility="public" isLeaf="false" xmi.id="Component_View" isRoot="false" isSpecification="false" isAbstract="false" name="Component View" namespace="m1">
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model visibility="public" isLeaf="false" xmi.id="Deployment_View" isRoot="false" isSpecification="false" isAbstract="false" name="Deployment View" namespace="m1">
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model visibility="public" isLeaf="false" xmi.id="Entity_Relationship_Model" isRoot="false" isSpecification="false" isAbstract="false" name="Entity Relationship Model" namespace="m1">
     <UML:Namespace.ownedElement/>
    </UML:Model>
   </UML:Namespace.ownedElement>
  </UML:Model>
 </XMI.content>
 <XMI.extensions xmi.extender="umbrello">
  <docsettings uniqueid="usGPVLMh5iCGP" viewid="usDo1ViJXfiWt" documentation=""/>
  <listview>
   <listitem id="Views" type="800" open="1">
    <listitem id="Component_View" type="821" open="1"/>
    <listitem id="Deployment_View" type="827" open="1"/>
    <listitem id="Entity_Relationship_Model" type="836" open="1"/>
    <listitem id="Logical_View" type="801" open="1">
     <listitem id="uIaqIuLewZfkq" type="813" open="1">
      <listitem id="uA4tsgBTi0VKT" type="814" open="0"/>
      <listitem id="u3eRZcSwdI8vX" type="814" open="0"/>
      <listitem id="ukZ2sOVjTRbpn" type="815" open="0"/>
     </listitem>
     <listitem id="u4HfZl5rBPWZN" type="813" open="1"/>
     <listitem id="usDo1ViJXfiWt" label="class diagram" type="807" open="0"/>
     <listitem id="Datatypes" type="830" open="0">
      <listitem id="u1PnZADBU6x2o" type="829" open="1"/>
      <listitem id="ubcLnvpDbYNRP" type="829" open="1"/>
      <listitem id="uVukoCX0WjzdA" type="829" open="1"/>
      <listitem id="uGtOL5I0SxyAq" type="829" open="1"/>
      <listitem id="uhy262vCe82L5" type="829" open="1"/>
      <listitem id="udmpHjWPeohRg" type="829" open="1"/>
      <listitem id="uEvvUOKvBydTH" type="829" open="1"/>
      <listitem id="uJslN0qC2Vt0E" type="829" open="1"/>
      <listitem id="utV7Xrb9dwM0V" type="829" open="1"/>
      <listitem id="u8WcIRnWlUICU" type="829" open="1"/>
      <listitem id="uUK0bf6aNRwx1" type="829" open="1"/>
      <listitem id="uX3ZOalya5sVi" type="829" open="1"/>
      <listitem id="uu8feqNZ3ULgj" type="829" open="1"/>
      <listitem id="uIreAVdV9AhE7" type="829" open="1"/>
      <listitem id="ucqmlE0dqgjDP" type="829" open="1"/>
      <listitem id="upcVC0dYexZJP" type="829" open="1"/>
      <listitem id="u7RyClw3dWoMd" type="829" open="1"/>
      <listitem id="uCUMBHuaeLDIU" type="829" open="1"/>
     </listitem>
     <listitem id="u60Z4Ak037VFn" type="813" open="1"/>
     <listitem id="uXMrWdn1mrddQ" type="813" open="1">
      <listitem id="urbJhSuD7rXoW" type="814" open="0"/>
      <listitem id="u9mnDsEmlmmty" type="814" open="0"/>
      <listitem id="ufDY7xAeHTJGv" type="815" open="0"/>
      <listitem id="uJmZBE6qSNxry" type="815" open="0"/>
     </listitem>
     <listitem id="uqsQ7tq1xsdrJ" type="813" open="1"/>
     <listitem id="uthGJI9ZNSyRi" type="813" open="1">
      <listitem id="uA4jfshhYnoXe" type="814" open="0"/>
      <listitem id="usCiH0A99s7fh" type="814" open="0"/>
      <listitem id="uz9iuc8kuDhbU" type="814" open="0"/>
      <listitem id="u91Ag8p0ee64P" type="814" open="0"/>
      <listitem id="u5znzJKt2RjTG" type="814" open="0"/>
      <listitem id="usv8yO1b6hb0y" type="815" open="0"/>
      <listitem id="uUZ8PeuupL9Qv" type="815" open="0"/>
     </listitem>
     <listitem id="uExkTT5hdo6SO" type="813" open="1"/>
    </listitem>
    <listitem id="Use_Case_View" type="802" open="1"/>
   </listitem>
  </listview>
  <codegeneration>
   <codegenerator language="C++"/>
  </codegeneration>
 </XMI.extensions>
</XMI>
